<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GWWorkItem.Wpf"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="TextBox"
           BasedOn="{StaticResource BaseStyle}">
        <Setter Property="FontSize"
                Value="{StaticResource FontSizeSmall}" />
        <Setter Property="FontFamily"
                Value="{StaticResource SourceHanRegular}" />
        <Setter Property="Foreground"
                Value="#F0F4FF" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0 0 0 1" />
        <Setter Property="Cursor"
                Value="IBeam" />
        <Setter Property="CaretBrush"
                Value="White" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid>
                        <Border Name="border"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="True"
                                CornerRadius="3">
                            <Grid>
                                <TextBlock IsHitTestVisible="True"
                                           Text="{TemplateBinding Text}"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Padding="{TemplateBinding Padding}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           Foreground="{TemplateBinding Foreground}" />
                                <TextBlock IsHitTestVisible="False"
                                           Text="{TemplateBinding Tag}"
                                           Name="placeholder"
                                           FontFamily="{TemplateBinding FontFamily}"
                                           Padding="{TemplateBinding Padding}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                           Foreground="{TemplateBinding Foreground}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility"
                                                    Value="Collapsed" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource TemplatedParent}}"
                                                             Value="">
                                                    <Setter Property="Visibility"
                                                            Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                    </Grid>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock"
           x:Key="SpinningText">
        <Setter Property="FontFamily"
                Value="{StaticResource FontAwesome}" />
        <Setter Property="Text"
                Value="{StaticResource FontAwesomeSpinIcon}" />
        <Setter Property="RenderTransformOrigin"
                Value="0.5, 0.5" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <RotateTransform />
            </Setter.Value>
        </Setter>

        <Style.Resources>
            <Storyboard x:Key="Spin">
                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                 From="0"
                                 To="360"
                                 Duration="0:0:2"
                                 RepeatBehavior="Forever" />
            </Storyboard>
        </Style.Resources>

        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}"
                         Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard Name="SpinStoryboard"
                                     Storyboard="{StaticResource Spin}" />
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <RemoveStoryboard BeginStoryboardName="SpinStoryboard" />
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="FontFamily"
                Value="{StaticResource SourceHanRegular}" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="HorizontalAlignment"
                Value="Center" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Foreground"
                Value="#9C9AA2B8" />
    </Style>
    
    <!--<SolidColorBrush x:Key="TextBox.Static.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="TextBox.Static.Border"
                     Color="#FFABAdB3" />
    <SolidColorBrush x:Key="TextBox.MouseOver.Border"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="TextBox.Focus.Border"
                     Color="#FF569DE5" />

    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden"
                                  Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ComboBox.Static.Background"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFF0F0F0"
                      Offset="0.0" />
        <GradientStop Color="#FFE5E5E5"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Static.Border"
                     Color="#FFACACAC" />
    <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                     Color="#FF606060" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                     Color="#FFABADB3" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                     Color="Transparent" />

    <LinearGradientBrush x:Key="ComboBox.MouseOver.Background"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFECF4FC"
                      Offset="0.0" />
        <GradientStop Color="#FFDCECFC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                     Color="#FF7EB4EA" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                     Color="#FF7EB4EA" />
    <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFEBF4FC"
                      Offset="0.0" />
        <GradientStop Color="#FFDCECFC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                     Color="#FF7EB4EA" />

    <LinearGradientBrush x:Key="ComboBox.Pressed.Background"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFDAECFC"
                      Offset="0.0" />
        <GradientStop Color="#FFC4E0FC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                     Color="#FF000000" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                     Color="#FF569DE5" />
    <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFDAEBFC"
                      Offset="0.0" />
        <GradientStop Color="#FFC4E0FC"
                      Offset="1.0" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                     Color="#FF569DE5" />

    <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                     Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                     Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                     Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                     Color="#FFBFBFBF" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                     Color="Transparent" />
    <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                     Color="Transparent" />

    <Style x:Key="ComboBoxToggleButton"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot"
                            SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            BorderBrush="{StaticResource ComboBox.Static.Border}"
                            Background="{StaticResource ComboBox.Static.Background}">
                        <Border x:Name="splitBorder"
                                SnapsToDevicePixels="true"
                                HorizontalAlignment="Right"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                BorderThickness="1"
                                BorderBrush="Transparent"
                                Margin="0">
                            <Path x:Name="arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Fill="{StaticResource ComboBox.Static.Glyph}"
                                  Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                  Margin="0" />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                                <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding Path=IsPressed,RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Static.Editable.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Static.Editable.Border}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.MouseOver.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.MouseOver.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver,RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="{StaticResource ComboBox.Pressed.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed,RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Pressed.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Pressed.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed,RelativeSource={RelativeSource Self}}"
                                           Value="true" />
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="arrow"
                                    Property="Fill"
                                    Value="{StaticResource ComboBox.Disabled.Glyph}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="false" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Disabled.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Disabled.Border}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsEnabled,RelativeSource={RelativeSource Self}}"
                                           Value="false" />
                                <Condition Binding="{Binding Path=IsEditable,RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}"
                                           Value="true" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="templateRoot"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                            <Setter TargetName="templateRoot"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                            <Setter TargetName="splitBorder"
                                    Property="Background"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                            <Setter TargetName="splitBorder"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Bottom"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow"
                                              Color="Transparent"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="0"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"
                          Grid.ColumnSpan="2" />
            <Border x:Name="border"
                    Margin="{TemplateBinding BorderThickness}"
                    Background="{StaticResource TextBox.Static.Background}">
                <TextBox x:Name="PART_EditableTextBox"
                         Style="{StaticResource ComboBoxEditableTextBox}"
                         IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                         Margin="{TemplateBinding Padding}"
                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter TargetName="border"
                        Property="Opacity"
                        Value="0.56" />
            </Trigger>
            <Trigger Property="IsKeyboardFocusWithin"
                     Value="true">
                <Setter Property="Foreground"
                        Value="Black" />
            </Trigger>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,0,5,5" />
                <Setter Property="Color"
                        TargetName="shadow"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid x:Name="templateRoot"
              SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                  Width="0" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Margin="1"
                   Placement="Bottom"
                   Grid.ColumnSpan="2"
                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                <theme:SystemDropShadowChrome x:Name="shadow"
                                              Color="Transparent"
                                              MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                              MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                    <Border x:Name="dropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                            BorderThickness="1">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid x:Name="grid"
                                  RenderOptions.ClearTypeHint="Enabled">
                                <Canvas x:Name="canvas"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        Height="0"
                                        Width="0">
                                    <Rectangle x:Name="opaqueRect"
                                               Fill="{Binding Background, ElementName=dropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=dropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton x:Name="toggleButton"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          Background="{TemplateBinding Background}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                          Style="{StaticResource ComboBoxToggleButton}"
                          Grid.ColumnSpan="2" />
            <ContentPresenter x:Name="contentPresenter"
                              Content="{TemplateBinding SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                              ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                              IsHitTestVisible="false"
                              Margin="{TemplateBinding Padding}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                <Setter Property="Margin"
                        TargetName="shadow"
                        Value="0,0,5,5" />
                <Setter Property="Color"
                        TargetName="shadow"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="Height"
                        TargetName="dropDownBorder"
                        Value="95" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping"
                               Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </MultiTrigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="opaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="opaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Background"
                     Color="#1F26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHover.Border"
                     Color="#A826A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Background"
                     Color="#3D26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelected.Border"
                     Color="#FF26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Background"
                     Color="#2E0080FF" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedHover.Border"
                     Color="#99006CD9" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Background"
                     Color="#3DDADADA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewSelectedNoFocus.Border"
                     Color="#FFDADADA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewFocus.Border"
                     Color="#FF26A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Background"
                     Color="#5426A0DA" />
    <SolidColorBrush x:Key="ComboBoxItem.ItemsviewHoverFocus.Border"
                     Color="#FF26A0DA" />

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Padding"
                Value="4,1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="Bd"
                                    Property="TextElement.Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxItem.ItemsviewHover.Background}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxItem.ItemsviewHover.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelected.Background}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelected.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Background}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelectedHover.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="True" />
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Background}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxItem.ItemsviewSelectedNoFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="IsMouseOver"
                                           Value="False" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxItem.ItemsviewFocus.Border}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="False" />
                                <Condition Property="IsMouseOver"
                                           Value="True" />
                                <Condition Property="UIElement.IsKeyboardFocused"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Bd"
                                    Property="Background"
                                    Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Background}" />
                            <Setter TargetName="Bd"
                                    Property="BorderBrush"
                                    Value="{StaticResource ComboBoxItem.ItemsviewHoverFocus.Border}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource FocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ComboBox.Static.Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ComboBox.Static.Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Padding"
                Value="6,3,5,3" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template"
                Value="{StaticResource ComboBoxTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Padding"
                        Value="2" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>-->

</ResourceDictionary>